"""
Django settings for WEB project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
# import environ
# for importing example_settings.env as in https://stackoverflow.com/questions/44693485/where-do-i-set-environment-variables-for-django


#env = environ.Env(
#    #AWS_ACCESS_KEY_ID=(str, ''),
#    #AWS_SECRET_ACCESS_KEY=(str, ''),
#    #AWS_STORAGE_BUCKET_NAME=(str, ''),
#    SECRET_KEY=(str, ''),
#)
#environ.Env.read_env('WEB/settings.env')

#AWS_ACCESS_KEY_ID=  env('AWS_ACCESS_KEY_ID')
#AWS_SECRET_ACCESS_KEY= env('AWS_SECRET_ACCESS_KEY')
#AWS_STORAGE_BUCKET_NAME= env('AWS_STORAGE_BUCKET_NAME')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY= os.environ.get('SECRET_KEY')


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'portfolio.apps.PortfolioConfig',
    'photologue',
    'sortedm2m',
    'django.contrib.sites',
    'taggit',
    'photologue_custom',
    'sass_processor',
    #'storages',
    'fancybox',
    #'collectfast',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'WEB.urls'

# added for photologue
from photologue import PHOTOLOGUE_APP_DIR
TEMPLATE_DIRS = (
    'templates',
    PHOTOLOGUE_APP_DIR
)
PHOTOLOGUE_GALLERY_SAMPLE_SIZE = 4

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'WEB.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
#

#comment for use with s3
STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATICFILES_DIRS = [
   # os.path.join(BASE_DIR, 'portfolio/static'),
    os.path.join(BASE_DIR, 'static'),
]

# AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME

# uncomment for use with s3
# tell django to use Amazon S3
# STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

# comment for use wit s3
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "WEB/static_cdn")
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "WEB/media_cdn") # for: user uploaded

# Uncomment this for Amazon S3 file storage
# from example_storages.settings_s3boto import *

# ADMIN_MEDIA_PREFIX = STATIC_URL + 'admin/'
